# GCP TFE Pipeline

# Which branch to trigger from
trigger:
- main

# Which OS image for the build agent to run 
pool:
  vmImage: 'ubuntu-latest'

# Steps for your build process
steps:
- task: DownloadSecureFile@1
  name: downloadSecureFile
  inputs:
    secureFile: 'deft-smile-424908-e6-99b257295217.json'

- task: CopyFiles@2
  displayName: 'Copy Terraform files to artifacts'
  inputs:
    SourceFolder: 'Terraform'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Terraform'

- task: CopyFiles@2
  displayName: 'Copy Secure File to Artifacts'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'  # Default location where secure files are downloaded
    Contents: 'deft-smile-424908-e6-99b257295217.json'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Terraform'
    publishLocation: 'Container'

- task: Bash@3
  displayName: 'Set Environment Variables for Terraform'
  inputs:
    targetType: 'inline'
    script: |
      export GOOGLE_APPLICATION_CREDENTIALS=$(Build.ArtifactStagingDirectory)/deft-smile-424908-e6-99b257295217.json
      echo "GOOGLE_APPLICATION_CREDENTIALS set to $(Build.ArtifactStagingDirectory)/deft-smile-424908-e6-99b257295217.json"

- task: Bash@3
  displayName: 'Run Terraform Commands'
  inputs:
    targetType: 'inline'
    script: |

      # Activate the service account using the environment variable
      gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS"

      # Set the project
      gcloud config set project deft-smile-424908-e6

      # Verify the authentication
      gcloud auth list

      # Initialize Terraform with backend reconfiguration
      terraform init -reconfigure

      # Apply Terraform configuration
      terraform apply -auto-approve
