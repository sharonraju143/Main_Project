name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write public key to file
        run: echo "${{ secrets.PUBLIC_KEY }}" > Terraform/public_key.pub

      - name: Write private key to file
        run: echo "${{ secrets.PRIVATE_KEY }}" > Terraform/private_key.pem

      - name: Set private key file permissions
        run: chmod 600 Terraform/private_key.pem

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        working-directory: Terraform

      - name: Terraform Plan
        run: terraform plan -var project_id=${{ secrets.PROJECT_ID }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        working-directory: Terraform

      - name: Terraform Apply
        run: terraform apply --auto-approve -var project_id=${{ secrets.PROJECT_ID }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        working-directory: Terraform

      - name: Debug Terraform Outputs
        run: |
          echo "Master IP: $(terraform output -raw master_ip)"
          echo "Node 1 IP: $(terraform output -raw node_1_ip)"
          echo "Node 2 IP: $(terraform output -raw node_2_ip)"

      - name: Set environment variables
        run: |
          echo "master_ip=$(terraform output -raw master_ip)" >> $GITHUB_ENV
          echo "node_1_ip=$(terraform output -raw node_1_ip)" >> $GITHUB_ENV
          echo "node_2_ip=$(terraform output -raw node_2_ip)" >> $GITHUB_ENV

      - name: Create custom.ini file
        run: |
          echo "[master]" > Ansible/custom.ini
          echo "ip=${{ env.master_ip }}" >> Ansible/custom.ini
          echo "[nodes]" >> Ansible/custom.ini
          echo "node1_ip=${{ env.node_1_ip }}" >> Ansible/custom.ini
          echo "node2_ip=${{ env.node_2_ip }}" >> Ansible/custom.ini

      - name: Setup SSH for Ansible
        run: |
          mkdir -p ~/.ssh
          cp Terraform/private_key.pem ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbooks
        run: |
          cd Ansible
          ansible-playbook -i custom.ini dependencies.yml
          ansible-playbook -i custom.ini master.yml
          ansible-playbook -i custom.ini nodes.yml

      - name: Terraform Destroy
        run: terraform destroy --auto-approve -var project_id=${{ secrets.PROJECT_ID }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        working-directory: Terraform
